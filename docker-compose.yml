services:
  dbkeycloak:
    container_name: dbkeycloak
    image: postgres:latest
    env_file:
      - .envars/.env.dbkeycloak
    ports:
      - ${DB_KEYCLOAK_PORT}:5432
  dbpercona:
    container_name: dbpercona
    image: perconalab/postgres-tde-ext:latest
    env_file:
      - .envars/.env.dbpercona
    volumes:
      # NOTE : execution order is lexographical order
      # - ./dbpercona/pg-tde-create-ext.sh:/docker-entrypoint-initdb.d/pg-tde-create-ext.sh
      # - ./dbpercona/pg-tde-streaming-repl.sh:/docker-entrypoint-initdb.d/pg-tde-streaming-repl.sh
      - ./dbpercona/pg-xx-init.sql:/docker-entrypoint-initdb.d/pg-xx-init.sql
      - ./dbpercona/pg-xx-populate.sql:/docker-entrypoint-initdb.d/pg-xx-populate.sql
    ports:
      - ${DB_PERCONA_PORT}:5432
  keycloak:
    container_name: keycloak
    depends_on:
      - dbkeycloak
    image: quay.io/keycloak/keycloak:latest
    env_file:
      - .envars/.env.keycloak
    volumes:
      - ./.keys:/opt/keycloak/conf
      - ./.keycloak_realms:/opt/keycloak/data/import
    command: -v start-dev --import-realm
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.rule=Host(`${KEYCLOAK_HOSTNAME}`)"
      - "traefik.http.routers.keycloak.entrypoints=web"
      - traefik.http.services.keycloak.loadbalancer.server.port=80
  backend:
    container_name: backend
    build: backend
    depends_on:
      - dbpercona
      - keycloak
    env_file:
      - .envars/.env.backend
    volumes:
      - ./backend/app:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${BACKEND_HOSTNAME}`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=80"
  frontend:
    container_name: frontend
    build: frontend
    depends_on:
      - backend
    env_file:
      - .envars/.env.frontend
    volumes:
      - ./frontend/src/app:/src/app
      - ./frontend/src/components:/src/components
      - ./frontend/src/public:/src/public
      - ./frontend/src/utils:/src/utils
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${FRONTEND_HOSTNAME}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
  traefik:
    image: traefik:latest
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - ./traefik/dyn:/etc/traefik/dyn
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock:routers
